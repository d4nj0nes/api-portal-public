{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
	"dnsNameForApiPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.4-LTS",
      "metadata": {
        "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.4-LTS, 15.10, 16.04.0-LTS"
      },
      "allowedValues": [
        "14.04.4-LTS",
        "15.10",
        "16.04.0-LTS"
      ]
    }
  },
  "variables": {
  	"imagePublisher": "Canonical",
	"imageOffer": "UbuntuServer",
	"OSDiskName": "osdiskfordockersimple",
	"nicName": "StrataPortalVMNicD",
	"extensionName": "DockerExtension",
	"addressPrefix": "10.0.0.0/16",
	"subnetName": "Subnet",
	"subnetPrefix": "10.0.0.0/24",
	"storageAccountType": "Standard_LRS",
	"publicIPAddressName": "StrataPortalPublicIPD",
	"apiPublicIPAddressName":"StrataPortalAPIPublicIPD",
	"publicIPAddressType": "Dynamic",
	"vmStorageAccountContainerName": "vhds",
	"vmName": "StrataPortalDockerVM",
	"vmSize": "Standard_A2_v2",
	"virtualNetworkName": "StrataPortalVNETD",
	"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
	"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
	"nsg": "StrataPortalNSG",
	"availabilitySetName": "StrataPortalAvail",
	"lbName": "StrataPortalLB",
	"lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
	"frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEndPortal')]",
	"apiFrontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEndAPI')]",
	"lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/StrataPortalBackendPool')]",
	"lbPoolID2": "[concat(variables('lbID'),'/backendAddressPools/StrataPortalBackendPool2')]",
	"lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
	"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
	"apiPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('apiPublicIPAddressName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
	{
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('apiPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForApiPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
		"[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "portalipconfig",
            "properties": {
				"primary": true,
				"privateIPAllocationMethod": "Dynamic",
				"loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/StrataPortalBackendPool')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/SSL-VM-Api')]"
                },
				 {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/SSL-VM-Portal')]"
                }
	      ],
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
	"networkSecurityGroup": {
	  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg'))]"
	}
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
	"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
	"availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              	"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
  		"properties": { "primary": true }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": { }
      }
    },
	{
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg')]",
            "apiVersion": "2016-03-30",
            "location": "westus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSHAllowAny",
                        "properties": {
                            "description": "Allow ssh from public Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DockerAllowAny",
                        "properties": {
                            "description": "Allow docker engine access (TLS-protected)",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "2376",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHttpsIn",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound"
                        }
                    },
                    {
			"name": "AllowHttpIn",
			"properties": {
			    "protocol": "TCP",
			    "sourcePortRange": "*",
			    "destinationPortRange": "80",
			    "sourceAddressPrefix": "*",
			    "destinationAddressPrefix": "*",
			    "access": "Allow",
			    "priority": 330,
			    "direction": "Inbound"
			}
		    },
		    {
			"name": "AllowRancherIn",
			"properties": {
			    "protocol": "TCP",
			    "sourcePortRange": "*",
			    "destinationPortRange": "8080",
			    "sourceAddressPrefix": "*",
			    "destinationAddressPrefix": "*",
			    "access": "Allow",
			    "priority": 340,
			    "direction": "Inbound"
			}
		    },
		    {
			"name": "AllowUDPIN",
			"properties": {
			    "protocol": "UDP",
			    "sourcePortRange": "*",
			    "destinationPortRange": "500",
			    "sourceAddressPrefix": "*",
			    "destinationAddressPrefix": "*",
			    "access": "Allow",
			    "priority": 350,
			    "direction": "Inbound"
			}
		    },
		    {
			"name": "AllowUDPIN2",
			"properties": {
			    "protocol": "UDP",
			    "sourcePortRange": "*",
			    "destinationPortRange": "4500",
			    "sourceAddressPrefix": "*",
			    "destinationAddressPrefix": "*",
			    "access": "Allow",
			    "priority": 360,
			    "direction": "Inbound"
			}
		    }
		]
	    },
	    "resources": [],
	    "dependsOn": []
	},
	{
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
	{
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
		"[concat('Microsoft.Network/publicIPAddresses/', variables('apiPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEndPortal",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          },
		  {
            "name": "LoadBalancerFrontEndAPI",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('apiPublicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "StrataPortalBackendPool"
          },
	  {
            "name": "StrataPortalBackendPool2"
          }
        ],
        "inboundNatRules": [
          {
            "name": "SSL-VM-Portal",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 443,
              "enableFloatingIP": true
            }
          },
          {
            "name": "SSL-VM-Api",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('apiFrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50002,
              "backendPort": 443,
              "enableFloatingIP": true
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          },
		  {
            "name": "LBRuleApi",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('apiFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID2')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    }
  ]
}
